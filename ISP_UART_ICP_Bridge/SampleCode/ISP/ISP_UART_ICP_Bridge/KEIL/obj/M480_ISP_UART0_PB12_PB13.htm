<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\M480_ISP_UART0_PB12_PB13.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\M480_ISP_UART0_PB12_PB13.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue May 02 11:44:16 2023
<BR><P>
<H3>Maximum Stack Usage =        168 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ParseCmd &rArr; GetDataFlashInfo &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[f]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[36]">ACMP01_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[a]">BOD_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[54]">BPWM0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[55]">BPWM1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[22]">BRAKE0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[26]">BRAKE1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[41]">CAN0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[42]">CAN1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[69]">CAN2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[57]">CCAP_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[e]">CKFAIL_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4d]">CRYPTO_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[33]">DAC_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[f]">Default_Handler</a> from startup_m480.o(.text) referenced 14 times from startup_m480.o(RESET)
 <LI><a href="#[34]">EADC00_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[35]">EADC01_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[37]">EADC02_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[38]">EADC03_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[65]">EADC10_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[66]">EADC11_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[67]">EADC12_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[68]">EADC13_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5b]">ECAP0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5c]">ECAP1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[60]">EHCI_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[14]">EINT0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[15]">EINT1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[16]">EINT2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[17]">EINT3_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[18]">EINT4_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[19]">EINT5_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4f]">EINT6_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5e]">EINT7_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4a]">EMAC_RX_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[49]">EMAC_TX_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[23]">EPWM0P0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[24]">EPWM0P1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[25]">EPWM0P2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[27]">EPWM1P0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[28]">EPWM1P1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[29]">EPWM1P2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1a]">GPA_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1b]">GPB_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1c]">GPC_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1d]">GPD_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1e]">GPE_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1f]">GPF_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4e]">GPG_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5d]">GPH_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[30]">I2C0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[31]">I2C1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[58]">I2C2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4b]">I2S0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[b]">IRC_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3f]">OHCI_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[4c]">OPA0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[32]">PDMA_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[c]">PWRWU_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[59]">QEI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5a]">QEI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[20]">QSPI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3b]">QSPI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[d]">RAMPE_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6d]">Reset_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[43]">SC0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[44]">SC1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[45]">SC2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[47]">SDH0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5f]">SDH1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[21]">SPI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3c]">SPI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[46]">SPI3_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[56]">SPIM_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6b]">SystemInit</a> from system_m480.o(.text) referenced from startup_m480.o(.text)
 <LI><a href="#[11]">TAMPER_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2a]">TMR0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2b]">TMR1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2c]">TMR2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2d]">TMR3_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[62]">TRNG_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2e]">UART0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[2f]">UART1_IRQHandler</a> from uart_transfer.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[39]">UART2_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3a]">UART3_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[50]">UART4_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[51]">UART5_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[63]">UART6_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[64]">UART7_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[48]">USBD20_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[3e]">USBD_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[61]">USBOTG20_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[40]">USBOTG_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[52]">USCI0_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[53]">USCI1_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[12]">WDT_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[13]">WWDT_IRQHandler</a> from startup_m480.o(.text) referenced from startup_m480.o(RESET)
 <LI><a href="#[6c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_m480.o(.text)
 <LI><a href="#[6a]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[6e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[97]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[98]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[99]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[9b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[9c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[70]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_m480.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>

<P><STRONG><a name="[6b]"></a>SystemInit</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, system_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>Reset_Handler</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, startup_m480.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ACMP01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>BPWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>BPWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>BRAKE0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>BRAKE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CAN2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>CCAP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CKFAIL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CRYPTO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EADC00_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EADC01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EADC02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EADC03_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>EADC10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>EADC11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>EADC12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>EADC13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>ECAP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>ECAP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>EHCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EINT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>EINT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>EINT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>EMAC_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>EMAC_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EPWM0P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EPWM0P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EPWM0P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EPWM1P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>EPWM1P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EPWM1P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>GPG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>IRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>OHCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>OPA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>QEI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>QEI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RAMPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>SC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SDH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SDH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SPIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USBD20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>USBOTG20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USBOTG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USCI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USCI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[72]"></a>SYS_Init</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>main</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = main &rArr; ParseCmd &rArr; GetDataFlashInfo &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutString
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ModeEntry
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFlashInfo
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetApromSize
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7a]"></a>FMC_Write_User</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, fmc_user.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ProgramFlash
</UL>

<P><STRONG><a name="[7c]"></a>FMC_Read_User</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fmc_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FMC_Read_User &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetApromSize
</UL>

<P><STRONG><a name="[7e]"></a>FMC_Erase_User</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fmc_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FMC_Erase_User &rArr; ICP_PageEraseFlash &rArr; ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_PageEraseFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
</UL>

<P><STRONG><a name="[80]"></a>ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fmc_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ReadData &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
</UL>

<P><STRONG><a name="[81]"></a>WriteData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fmc_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WriteData &rArr; ICP_ProgramFlash &rArr; ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ProgramFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
</UL>

<P><STRONG><a name="[82]"></a>EraseAP</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, fmc_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = EraseAP &rArr; ICP_PageEraseFlash &rArr; ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_PageEraseFlash
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_BlockErase
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_BankErase
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
</UL>

<P><STRONG><a name="[85]"></a>UpdateConfig</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, fmc_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = UpdateConfig &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadFlash
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ProgramFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
</UL>

<P><STRONG><a name="[78]"></a>ParseCmd</STRONG> (Thumb, 524 bytes, Stack size 48 bytes, isp_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ParseCmd &rArr; GetDataFlashInfo &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFlashInfo
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadDID
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Checksum
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadFlash
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateConfig
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseAP
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Erase_User
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>GetApromSize</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, targetdev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GetApromSize &rArr; FMC_Read_User &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Read_User
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>GetDataFlashInfo</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, targetdev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GetDataFlashInfo &rArr; ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>UART1_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, uart_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>PutString</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart_transfer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>UART_Init</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, uart_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a1]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>ICP_BankErase</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, icplib.o(i.ICP_BankErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ICP_BankErase &rArr; ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseAP
</UL>

<P><STRONG><a name="[84]"></a>ICP_BlockErase</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, icplib.o(i.ICP_BlockErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ICP_BlockErase &rArr; ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseAP
</UL>

<P><STRONG><a name="[74]"></a>ICP_Init</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, icplib.o(i.ICP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ICP_Init &rArr; ICP_SetGPIOMode
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SetGPIOMode
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>ICP_ModeEntry</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, icplib.o(i.ICP_ModeEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ICP_ModeEntry &rArr; ICP_ReadCID &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteBits
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SetReset
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysTickDelay
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadDID
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadCID
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>ICP_PageEraseFlash</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, icplib.o(i.ICP_PageEraseFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ICP_PageEraseFlash &rArr; ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseAP
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Erase_User
</UL>

<P><STRONG><a name="[7b]"></a>ICP_ProgramFlash</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, icplib.o(i.ICP_ProgramFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ICP_ProgramFlash &rArr; ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateConfig
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Write_User
</UL>

<P><STRONG><a name="[94]"></a>ICP_ReadCID</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, icplib.o(i.ICP_ReadCID))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ICP_ReadCID &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ModeEntry
</UL>

<P><STRONG><a name="[86]"></a>ICP_ReadDID</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, icplib.o(i.ICP_ReadDID))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ICP_ReadDID &rArr; ICP_SendCommand &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ModeEntry
</UL>

<P><STRONG><a name="[7d]"></a>ICP_ReadFlash</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, icplib.o(i.ICP_ReadFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ICP_ReadFlash &rArr; ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFlashInfo
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Read_User
</UL>

<P><STRONG><a name="[a2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m480.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m480.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>Checksum</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, isp_user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseCmd
</UL>

<P><STRONG><a name="[8a]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart_transfer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[89]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart_transfer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[92]"></a>CLK_SysTickDelay</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, icplib.o(i.CLK_SysTickDelay))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ModeEntry
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteData
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteBits
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadData
</UL>

<P><STRONG><a name="[95]"></a>ICP_ReadData</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, icplib.o(i.ICP_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ICP_ReadData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteBits
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SetGPIOMode
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadFlash
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadCID
</UL>

<P><STRONG><a name="[8e]"></a>ICP_SendCommand</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, icplib.o(i.ICP_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ICP_SendCommand &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadDID
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadFlash
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ProgramFlash
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_PageEraseFlash
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_BlockErase
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_BankErase
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadCID
</UL>

<P><STRONG><a name="[90]"></a>ICP_SetGPIOMode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, icplib.o(i.ICP_SetGPIOMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ICP_SetGPIOMode
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadData
</UL>

<P><STRONG><a name="[91]"></a>ICP_SetReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, icplib.o(i.ICP_SetReset))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ModeEntry
</UL>

<P><STRONG><a name="[93]"></a>ICP_WriteBits</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, icplib.o(i.ICP_WriteBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ModeEntry
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_SendCommand
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ReadData
</UL>

<P><STRONG><a name="[8f]"></a>ICP_WriteData</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, icplib.o(i.ICP_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ICP_WriteData &rArr; ICP_WriteBits
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_WriteBits
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_ProgramFlash
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_PageEraseFlash
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_BlockErase
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICP_BankErase
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
